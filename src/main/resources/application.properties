# set application context path(i.e. path after localhost:8080)
server.servlet.contextPath=/test

# to initialize data using our data.sql file
spring.datasource.data=classpath:data.sql

# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# Connection url for the database "netgloo_blog"
spring.datasource.url = jdbc:mysql://localhost:3306/testdb?useSSL=false&serverTimezone= UTC

# Username and password
spring.datasource.username = root
spring.datasource.password = root

# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update, validate, none): with "create" 
# hibernate first drops existing tables, then creates new tables. "none" to define our own schema.sql file
spring.jpa.hibernate.ddl-auto = create

# to use data.sql file to populate data
spring.datasource.initialization-mode = always


# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
